{"ast":null,"code":"var _jsxFileName = \"/Users/devindavis/Development/code/post-work/over-engineered-clicker/main/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { NewNoteInput } from \"./NewNoteInput\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addNote } from \"./actions\";\nimport { saveNotes, loadNotes } from \"./notesReducer\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const notes = useSelector(state => state.notes);\n  const dispatch = useDispatch();\n\n  const onAddNote = note => {\n    dispatch(addNote(note));\n  };\n\n  const onSave = () => {\n    dispatch(saveNotes());\n  };\n\n  const onLoad = () => {\n    dispatch(loadNotes());\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewNoteInput, {\n      addNote: onAddNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notes.map(note => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: note.content\n        }, note.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSave,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onLoad,\n      children: \"Load\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"AU0yCPgM6cCSGgZtUJbOCfiwDXo=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/devindavis/Development/code/post-work/over-engineered-clicker/main/frontend/src/App.js"],"names":["NewNoteInput","useSelector","useDispatch","addNote","saveNotes","loadNotes","App","notes","state","dispatch","onAddNote","note","onSave","onLoad","map","content","id"],"mappings":";;;AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,gBAArC;AACA,OAAO,WAAP;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,KAAK,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAzB;AACA,QAAME,QAAQ,GAAGP,WAAW,EAA5B;;AAEA,QAAMQ,SAAS,GAAIC,IAAD,IAAU;AAC1BF,IAAAA,QAAQ,CAACN,OAAO,CAACQ,IAAD,CAAR,CAAR;AACD,GAFD;;AAIA,QAAMC,MAAM,GAAG,MAAM;AACnBH,IAAAA,QAAQ,CAACL,SAAS,EAAV,CAAR;AACD,GAFD;;AAIA,QAAMS,MAAM,GAAG,MAAM;AACnBJ,IAAAA,QAAQ,CAACJ,SAAS,EAAV,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEK;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBACGH,KAAK,CAACO,GAAN,CAAWH,IAAD,IAAU;AACnB,4BAAO;AAAA,oBAAmBA,IAAI,CAACI;AAAxB,WAASJ,IAAI,CAACK,EAAd;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YAHF,eAQE;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAQ,MAAA,OAAO,EAAEJ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AAAQ,MAAA,OAAO,EAAEC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA,kBADF;AAcD;;GA9BQP,G;UACOL,W,EACGC,W;;;KAFVI,G;AAgCT,eAAeA,GAAf","sourcesContent":["import { NewNoteInput } from \"./NewNoteInput\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addNote } from \"./actions\";\nimport { saveNotes, loadNotes } from \"./notesReducer\";\nimport './App.css';\n\nfunction App() {\n  const notes = useSelector((state) => state.notes);\n  const dispatch = useDispatch();\n\n  const onAddNote = (note) => {\n    dispatch(addNote(note));\n  };\n\n  const onSave = () => {\n    dispatch(saveNotes());\n  };\n\n  const onLoad = () => {\n    dispatch(loadNotes());\n  };\n\n  return (\n    <>\n      <NewNoteInput addNote={onAddNote} />\n      <hr />\n      <ul>\n        {notes.map((note) => {\n          return <li key={note.id}>{note.content}</li>;\n        })}\n      </ul>\n      <hr />\n      <button onClick={onSave}>Save</button>\n      <button onClick={onLoad}>Load</button>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}